RA2bZinvAnalysis
Bill Ford
12 July 2018; updated 17 June 2019

RA2bZinvAnalysis is a root macro in C++ that produces the histograms
needed for performing the Z->nunu background measurement in the RA2b
analysis.  It is a reimplementation of parts of Troy's RA2b.py.  The
remaining functions are accomplished by feeding the histograms into
RA2b.py.  The input source is the skims of ntuples produced by
TreeMaker.

The macro produces the 174-bin histogram of the background predictions
and expectations, N-1 plots of the main analysis variables, cut-flow and
double-ratio plots, etc.  It accommodates Kevin Pedro's recipes for both
pileup and BTag scale factor corrections.

The code lives in
https://github.com/wmtford/znunu/blob/master/
Because of the pileup and BTag corrections one also needs Kevin Pedro's
analysis code, in 
https://github.com/kpedro88/Analysis/blob/master/ 

The files needed to run this class are
src/RA2bZinvLoadClasses.C
src/RA2bZinvDriver.C
src/RA2bZinvAnalysis.h, .C
src/CutManager.h, .C
src/CCbinning.h, .C
src/RA2bZinvAnalysis.cfi
src/NtupleClass.h 
src/YYYY.cfg  (optional)
datFiles/[skim|ntuple]FilesZZZZ.dat

Configuration of the RA2bZinvAnalysis instance is set via config files
RA2bZinvAnalysis.cfi (for default initialization), plus (filename).cfg
for specialization.

To launch from the command line,
root -l -b RA2bZinvLoadClasses.C RA2bZinvDriver.C

The main source file, RA2bZinvAnalysis.C, defines a singleton class and
some user-callable functions.  Its use is illustrated by the
implementation in RA2bZinvDriver.C.

The constructor takes one required arguments, a string with the name of
the .cfg file to be used (can be the empty string ""), and an optional
second string, the name of a runBlock that will override the value set in
the .cfi or .cfg file (only needed when running parallel jobs on
separate runBlocks).  The .dat file, chosen in the .cfi or .cfg file, is
an index of the names of the TreeMaker ntuple files for each of the
samples.  (The reason for having more than one index file is simply
their size for the raw nutple root file sets.)

Access to the ntuple's branches is provided by NtupleClass.h, a base
class for the RA2bZinvAnalysis.  Edit utils/sourceNtupleClass.sh to
point to the directories, files, and tree directory names for each of
the tree structures to be analyized (data/MC, skim/ntuple, TreeMaker
version), then run makeNtupleClass.sh, and move the resulting
NtupleClass.h to src/.

The baseline cuts are defined as a TCut string built in the getCuts
method.  To lift one or more cuts in making N-1 histograms, or to impose
additional cuts, one needs to associate the specific cut string(s) found
in getCuts with a class variable.  This variable will then be referenced
by code one would add to the makeHistograms method.

